1. Load problem-config from problem.yaml
2. Override config-field 'name' with languages found in statements

I guess previously the 'name' field did not matter, but now it has to match the problemstatements

Is being checked:
 [x] Config file exists
 [c] Problem has at least one name, either through the name-field or through \problemname{X} from statements
 [x] All fields are either optional or mandatory, where optional fields are taken from a standard-configuration in some standard-paths
 [x] All fields have a value
 [x] Field 'type' is either 'pass-fail' or 'scoring'
 [x] Check that problem has either a license or a rights-owner, and that problem does not have a rights-owner if it is in public domain
 [x] Check that field 'source' exists if 'source_url' exists
 [x] Check that the license is valid
 [x] Warn if license is unknown
 [x] Check that 'grading/show_test_data_groups' is either True or False
 [x] If above is true, check that problem is not pass-fail
 [c] Warn if problem has custom test data groups, that is subgroups beyond sample and secret, and does not specify 'grading/show_test_data_groups'
 [x] Check that 'grading/on_reject' is not 'grade' if problem-type is 'pass-fail'
 [x] Check that 'grading/on_reject' is either 'first_error', 'worst_error' or 'grade' if it exists
 [x] Check that 'grading/objective' is either 'min' or 'max'
 [x] Warn if a deprecated grading-keys are found under 'grading' ('accept_score', 'reject_score', 'range', 'on_reject')
 [x] Check that 'validation-type' is either 'default' or 'custom'
 [x] Check that there are no 'validation-params' if 'validation-type' is 'default'
 [x] Check that 'validation-params' are either 'grade' or 'interactive' if 'validation-type' is 'custom'
 [x] Check that 'limits' is a dictionary
 [r] Check that key 'libraries' does not exist (???) Remove this


"format": {
    "argument": {
        "alternatives": [dict|value],
        "is_mandatory": true|false,
        "fallback": Any,
        "forbids": {
            "field": [values]
        },
        "get_from_config": true|false, # Allow stuff to come from other parts of the problem
    }
}

"legacy": {
    "type":"object",
    "required": [],
    "config_fields": ["problem_format_version", "type", "name", "uuid", "author", "source", "source_url", "license", "rights_owner", "limits", "validation", "validator_flags", "keywords", "grading"],
    "properties": {
        "problem_format_version": {
            "type": "string",
            "default": "legacy",
            "alternatives": {"legacy":{}}
        },
        "type": {
            "type": "string",
            "default": "pass-fail",
            "alternatives": {
                "pass-fail": {
                    "forbid": "grading/on_reject:grade"
                },
                "scoring": {},
            },
        },
        "name": {
            "type": "string",
            "default": "",
        },
        "uuid": {
            "type": "string",
            "default": "",
        },
        "author": {
            "type": "string",
            "default": "",
        },
        "source": {
            "type": "string",
            "default": "",
        },
        "source_url": {
            "type": "string",
            "default": "",
            "alternatives": {
                ".*": {
                    "require": ["source"]
                }
            },
        },
        "license": {
            "type": "string",
            "default": "unknown",
            "alternatives": {
                "unknown": {
                    "warn": "License is unknown",
                    "require": ["rights_owner"]
                }
                "cc0|cc by|cc by-sa|educational|permission": {
                    "require": ["rights_owner"]
                },
                "public domain": {
                    "forbid": ["rights_owner"]
                }
            }
        },
        "rights_owner": {
            "type": "string",
            "default": "copy-from:author",
            "alternatives": {".*":[]}
        },
        "limits": {
            "type": "object",
            "required": [],
            "properties": {
                "time_multiplier": {
                    "type": "float",
                    "default": 5.0
                },
                "time_safety_margin": {
                    "type": "float",
                    "default": 2.0
                },
                "memory": {
                    "type": "int",
                    "default": "copy-from:system_default/memory"
                },
                "output": {
                    "type": "int",
                    "default": "copy-from:system_default/output"
                },
                "code": {
                    "type": "int",
                    "default": "copy-from:system_default/code"
                },
                "compilation_time": {
                    "type": "float",
                    "default": "copy-from:system_default/compilation_time"
                },
                "compilation_memory": {
                    "type": "int",
                    "default": "copy-from:system_default/compilation_memory"
                },
                "validation_time": {
                    "type": "float",
                    "default": "copy-from:system_default/validation_time"
                },
                "validation_memory": {
                    "type": "int",
                    "default": "copy-from:system_default/validation_memory"
                },
                "validation_output": {
                    "type": "int",
                    "default": "copy-from:system_default/validation_output"
                }
            }
        },
        "validation": {
            "type": "specially-parsed-object",
            "required": [],
            "properties": {
                "type": {
                    "type": "string",
                    "default": "default",
                    "alternatives": {
                        "default": {
                            "forbid": ["validation/interactive:true", "validation/score:true"]
                        },
                        "custom": {}
                    }
                },
                "interactive": {
                    "type": "bool",
                    "default": false
                },
                "score": {
                    "type": "bool",
                    "default": false
                }
            }
        },
        "validator_flags": {
            "type": "string",
            "default": "",
            "alternatives": { ".*": {} }
        },
        "keywords": {
            "type": "space-separated-strings",
            "default": [],
        }
    }
}
